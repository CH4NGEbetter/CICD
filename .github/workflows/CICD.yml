name: CICD

on:
  push:
    branches: 
      - 'v[0-9]+.[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  scan_build_push_sign_and_notify:
    runs-on: ubuntu-latest
    container:
        image: docker:24.0.6

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/ch4ngebetter/app:${{ github.sha }} .

      - name: Run Docker container
        run: docker run ch4ngebetter/app:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/ch4ngebetter/app:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Setup trivy reports directory
        run: mkdir -p trivy-reports

      - name: Run Trivy vulnerability scanner and save the report
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

          trivy image --format json -o trivy-reports/report.json docker.io/ch4ngebetter/app:${{ github.sha }}
          trivy image --format table -o trivy-reports/report.txt
        continue-on-error: true

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
            SLACK_MESSAGE: |
              Images built and signed
              Name: Li Hao
              Metriculation: ${{ secrets.METRICULATION }}
              Email: ${{ secrets.EMAIL }}
              Git: https://github.com/CH4NGEbetter/CICD.git
              Image: https://hub.docker.com/r/ch4ngebetter/app

      - name: Upload report to Slack
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNELID }}
          file_path: "/github/workspace/report.txt"
          initial_comment: 'post by slack-upload-file'





            #- name: Post to a Slack channel
            #  id: slack
            #  uses: slackapi/slack-github-action@v1.24.0
            #  with:
            #    Slack channel id, channel name, or user id to post message
            #    See also: https://api.slack.com/methods/chat.postMessage#channels
            #    You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
            #    channel-id: 'CHANNEL_ID,ANOTHER_CHANNEL_ID'
            #    For posting a simple plain text message
            #    slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            #  env:
            #    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

             #- name: Post to a Slack channel
             #  uses: slackapi/slack-github-action@v1.24.0
             #  with:
             #    channel-id: ${{ secrets.SLACK_CHANNELID }}
             #    slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
             #  env:
             #    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
             #    SLACK_MESSAGE_FILE: report.txt